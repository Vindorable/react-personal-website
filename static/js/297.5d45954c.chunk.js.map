{"version":3,"file":"static/js/297.5d45954c.chunk.js","mappings":"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","sources":["components/body-wrapper.js","components/image/image.js","components/image/lightbox.js","pages/unruly-gent.js","../node_modules/phosphor-react/src/icons/CaretCircleLeft.tsx","../node_modules/phosphor-react/src/icons/CaretCircleRight.tsx","../node_modules/phosphor-react/src/icons/XCircle.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Stack } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst BodyWrapper = ({ children }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        p={2}\r\n        sx={{\r\n          width: \"100vw\",\r\n          maxWidth: \"100%\", // This is very Important else there will be the 100vw scrollbar issue.\r\n          flexGrow: 1,\r\n          height: \"100%\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Stack\r\n          direction={\"row\"}\r\n          sx={{ width: \"100%\" }}\r\n          justifyContent={\"space-evenly\"}\r\n        >\r\n          <Stack\r\n            position={\"relative\"}\r\n            spacing={1}\r\n            p={3}\r\n            sx={{\r\n              //backgroundColor: theme.palette.background.paper,\r\n              //boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n\r\n              // borderRadius: \"8px\",\r\n              // border: 1,\r\n              // borderColor: theme.palette.divider,\r\n\r\n              width: {\r\n                xs: \"100%\", // 0px\r\n                md: \"80%\",  // 900px\r\n                lg: \"60%\",  // 1200px\r\n              },\r\n              maxWidth: \"896px\",\r\n            }}\r\n          >\r\n\r\n            {children}\r\n\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default BodyWrapper;","import React, { useRef } from \"react\";\r\nimport { Box, Stack, } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Lightbox from \"./lightbox\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst Image = ({ src, alt, url, lightbox, height, maxWidth }) => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n\r\n  const lightboxRef = useRef(null);\r\n  // Lightbox takes in an image set as prop.\r\n  const imageList = [\r\n    {\r\n      img: src,\r\n      title: alt,\r\n    },\r\n  ]\r\n\r\n  // https://stackoverflow.com/a/28054735\r\n  function checkDomain(url) {\r\n    if (url.indexOf('//') === 0) { url = window.location.protocol + url; }\r\n    return url.toLowerCase().replace(/([a-z])?:\\/\\//, '$1').split('/')[0];\r\n  };\r\n  function isExternalURL(url) {\r\n    return ((url.indexOf(':') > -1 || url.indexOf('//') > -1) && checkDomain(window.location.href) !== checkDomain(url));\r\n  };\r\n\r\n  function handleClick() {\r\n    if (url) return isExternalURL(url) ? window.open(url, \"_blank\") : navigate(url);\r\n    if (lightbox) return lightboxRef.current.openLightbox(imageList[0]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack alignItems={\"center\"} justifyContent={\"center\"} sx={{ width: \"100%\" }}>\r\n        <Stack>\r\n          <Box\r\n            component=\"img\"\r\n            sx={{\r\n              width: \"100%\",\r\n              maxWidth: maxWidth,\r\n              height: height ? height : \"auto\",\r\n              cursor: (url || lightbox) ? \"pointer\" : \"default\",\r\n              transition: theme.transitions.create(\"all\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen\r\n              }),\r\n              \"&:hover\": (url || lightbox) ? { transform: \"scale3d(1.05, 1.05, 1)\" } : undefined,\r\n              \"&:active\": (url || lightbox) ? { transform: \"scale3d(0.95, 0.95, 1)\" } : undefined,\r\n              objectFit: \"contain\"\r\n            }}\r\n            alt={alt}\r\n            src={src}\r\n            style={{ objectFit: \"contain\", borderRadius: \"8px\" }}\r\n            onClick={handleClick}\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <Lightbox ref={lightboxRef} imageSet={imageList} />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default Image;","import React, { forwardRef, useImperativeHandle } from \"react\";\r\nimport { Backdrop, Box, Fade, IconButton, Modal, Stack } from \"@mui/material\";\r\nimport { CaretCircleLeft, CaretCircleRight, XCircle } from \"phosphor-react\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst Lightbox = forwardRef(({ imageSet }, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    openLightbox(focusedImageItem) {\r\n      handleOpen(focusedImageItem);\r\n    },\r\n  }));\r\n\r\n  const [imageItem, setImageItem] = React.useState(\"false\");\r\n  const [image, setImage] = React.useState(\"false\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = (value) => {\r\n    setImageItem(value);\r\n    setImage(value.img);\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const modalNext = () => {\r\n    let currentIndex = imageSet.indexOf(imageItem);\r\n    if (currentIndex >= imageSet.length - 1) {\r\n      setOpen(false);\r\n    } else {\r\n      let nextImageItem = imageSet[currentIndex + 1];\r\n      setImageItem(nextImageItem);\r\n      setImage(nextImageItem.img);\r\n    }\r\n  };\r\n\r\n  const modalBack = () => {\r\n    let currentIndex = imageSet.indexOf(imageItem);\r\n    if (currentIndex <= 0) {\r\n      setOpen(false);\r\n    } else {\r\n      let nextImageItem = imageSet[currentIndex - 1];\r\n      setImageItem(nextImageItem);\r\n      setImage(nextImageItem.img);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        slots={{ backdrop: Backdrop }}\r\n        slotProps={{\r\n          backdrop: {\r\n            timeout: 500,\r\n          },\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Box\r\n            sx={{\r\n              width: \"100vw\",\r\n              height: \"100dvh\",\r\n              backgroundColor: \"#000\",\r\n            }}\r\n          >\r\n            <Box\r\n              component=\"img\"\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\",\r\n                width: image.width,\r\n                height: \"auto\",\r\n                maxWidth: \"100%\",\r\n                maxHeight: \"90%\",\r\n                bgcolor: \"background.paper\",\r\n                border: \"1px solid #fff\",\r\n                boxShadow: 24,\r\n                outline: \"none\",\r\n                objectFit: \"contain\"\r\n              }}\r\n              alt=\"\"\r\n              src={image}\r\n              style={{ objectFit: \"contain\", borderRadius: \"8px\" }}\r\n            />\r\n\r\n            <Stack sx={{ width: \"100vw\", height: \"100dvh\" }}>\r\n              <Stack\r\n                sx={{ width: \"100%\", height: \"100%\" }}\r\n                p={1}\r\n                justifyContent={\"center\"}\r\n              >\r\n                <Stack\r\n                  direction={\"row\"}\r\n                  alignItems={\"center\"}\r\n                  justifyContent={\"space-between\"}\r\n                >\r\n                  <IconButton onClick={() => modalBack()}>\r\n                    <CaretCircleLeft size={32} />\r\n                  </IconButton>\r\n                  <IconButton onClick={() => modalNext()}>\r\n                    <CaretCircleRight size={32} />\r\n                  </IconButton>\r\n                </Stack>\r\n              </Stack>\r\n\r\n              <Stack\r\n                direction={\"row\"}\r\n                sx={{ width: \"100%\" }}\r\n                position={\"absolute\"}\r\n                p={1}\r\n                alignItems={\"center\"}\r\n                justifyContent={\"end\"}\r\n              >\r\n                <IconButton onClick={() => setOpen(false)}>\r\n                  <XCircle size={32} />\r\n                </IconButton>\r\n              </Stack>\r\n            </Stack>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default Lightbox;","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport BodyWrapper from \"../components/body-wrapper\";\r\nimport { NavTab, NavTabs } from \"../components/nav-tab\";\r\nimport Image from \"../components/image/image\";\r\n\r\nimport ProvocationCollage from \"../assets/images/unruly-gent/collection-provocation.jpg\"\r\nimport ShapesCollage from \"../assets/images/unruly-gent/collection-shapes.jpg\"\r\nimport ThreadlessBanner from \"../assets/images/unruly-gent/threadless_banner.png\"\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst UnrulyGent = () => {\r\n  const theme = useTheme();\r\n\r\n  // Tabs.\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BodyWrapper>\r\n        <Image\r\n          src={ThreadlessBanner}\r\n          url=\"https://unrulygent.threadless.com/\"\r\n        />\r\n\r\n        <Typography variant=\"h5\">\r\n          COLLECTIONS\r\n        </Typography>\r\n        <NavTabs value={value} onChange={handleChange}>\r\n          <NavTab label=\"Provocation\" />\r\n          <NavTab label=\"Shapes\" />\r\n        </NavTabs>\r\n\r\n        <Box sx={{\r\n          padding: \"calc(1.25 * 8px)\",\r\n          backgroundColor: \"rgb(12, 12, 12)\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: `0px 0px 2px ${theme.palette.dividerCustom.strong}`,\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n        }}>\r\n          {/* IIFE (Immediately Invoked Function Expressions) */}\r\n          {(() => {\r\n            switch (value) {\r\n              case 0: return <Image src={ProvocationCollage} />\r\n              case 1: return <Image src={ShapesCollage} />\r\n            }\r\n          })()}\r\n        </Box>\r\n      </BodyWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default UnrulyGent;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"144 92 104 128 144 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"128\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"144 92 104 128 144 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm21.4,134.1a8,8,0,0,1,.5,11.3A7.9,7.9,0,0,1,144,172a8.2,8.2,0,0,1-5.4-2.1l-40-36a8,8,0,0,1,0-11.8l40-36a8,8,0,1,1,10.8,11.8L116,128Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"144 92 104 128 144 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"144 92 104 128 144 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"144 92 104 128 144 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretCircleLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretCircleLeft.displayName = \"CaretCircleLeft\";\n\nexport default CaretCircleLeft;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"116 92 156 128 116 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"128\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"116 92 156 128 116 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm33.4,109.9-40,36A8.2,8.2,0,0,1,116,172a7.9,7.9,0,0,1-5.9-2.6,8,8,0,0,1,.5-11.3L144,128,110.6,97.9a8,8,0,0,1,10.8-11.8l40,36a8,8,0,0,1,0,11.8Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"116 92 156 128 116 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"116 92 156 128 116 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"116 92 156 128 116 164\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretCircleRight = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretCircleRight.displayName = \"CaretCircleRight\";\n\nexport default CaretCircleRight;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"96\"\n      x2=\"96\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"160\"\n      x2=\"96\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"128\" cy=\"128\" r=\"96\" opacity=\"0.2\" />\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"96\"\n      x2=\"96\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"160\"\n      x2=\"96\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M128,24A104,104,0,1,0,232,128,104.2,104.2,0,0,0,128,24Zm37.7,130.3a8.1,8.1,0,0,1,0,11.4,8.2,8.2,0,0,1-11.4,0L128,139.3l-26.3,26.4a8.2,8.2,0,0,1-11.4,0,8.1,8.1,0,0,1,0-11.4L116.7,128,90.3,101.7a8.1,8.1,0,0,1,11.4-11.4L128,116.7l26.3-26.4a8.1,8.1,0,0,1,11.4,11.4L139.3,128Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"96\"\n      x2=\"96\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"160\"\n      x2=\"96\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"96\"\n      x2=\"96\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"160\"\n      x2=\"96\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"128\"\n      cy=\"128\"\n      r=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"96\"\n      x2=\"96\"\n      y2=\"160\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"160\"\n      y1=\"160\"\n      x2=\"96\"\n      y2=\"96\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst XCircle = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nXCircle.displayName = \"XCircle\";\n\nexport default XCircle;\n"],"names":["_ref","children","useTheme","_jsx","_Fragment","Stack","p","sx","width","maxWidth","flexGrow","height","overflowY","direction","justifyContent","position","spacing","xs","md","lg","src","alt","url","lightbox","theme","navigate","useNavigate","lightboxRef","useRef","imageList","img","title","checkDomain","indexOf","window","location","protocol","toLowerCase","replace","split","_jsxs","alignItems","Box","component","cursor","transition","transitions","create","easing","sharp","duration","leavingScreen","transform","undefined","objectFit","style","borderRadius","onClick","href","isExternalURL","open","current","openLightbox","Lightbox","ref","imageSet","forwardRef","useImperativeHandle","focusedImageItem","handleOpen","imageItem","setImageItem","React","image","setImage","setOpen","value","Modal","onClose","handleClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","backgroundColor","top","left","maxHeight","bgcolor","border","boxShadow","outline","IconButton","modalBack","currentIndex","nextImageItem","CaretCircleLeft","size","modalNext","length","CaretCircleRight","XCircle","UnrulyGent","setValue","BodyWrapper","Image","ThreadlessBanner","Typography","variant","NavTabs","onChange","handleChange","event","newValue","NavTab","label","padding","concat","palette","dividerCustom","strong","ProvocationCollage","ShapesCollage","pathsByWeight","Map","set","color","cx","cy","r","fill","stroke","strokeMiterlimit","strokeWidth","points","strokeLinecap","strokeLinejoin","opacity","d","renderPath","weight","renderPathForWeight","props","IconBase","Object","assign","displayName","x1","y1","x2","y2"],"sourceRoot":""}