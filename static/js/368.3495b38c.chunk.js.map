{"version":3,"file":"static/js/368.3495b38c.chunk.js","mappings":"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","sources":["components/body-wrapper.js","components/spacer.js","pages/contact.js"],"sourcesContent":["import React from \"react\";\r\nimport { Stack } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst BodyWrapper = ({ children }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        p={2}\r\n        sx={{\r\n          width: \"100vw\",\r\n          maxWidth: \"100%\", // This is very Important else there will be the 100vw scrollbar issue.\r\n          flexGrow: 1,\r\n          height: \"100%\",\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        <Stack\r\n          direction={\"row\"}\r\n          sx={{ width: \"100%\" }}\r\n          justifyContent={\"space-evenly\"}\r\n        >\r\n          <Stack\r\n            position={\"relative\"}\r\n            spacing={1}\r\n            p={3}\r\n            sx={{\r\n              //backgroundColor: theme.palette.background.paper,\r\n              //boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\r\n\r\n              // borderRadius: \"8px\",\r\n              // border: 1,\r\n              // borderColor: theme.palette.divider,\r\n\r\n              width: {\r\n                xs: \"100%\", // 0px\r\n                md: \"80%\",  // 900px\r\n                lg: \"60%\",  // 1200px\r\n              },\r\n              maxWidth: \"896px\",\r\n            }}\r\n          >\r\n\r\n            {children}\r\n\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default BodyWrapper;","import React from \"react\";\r\nimport { Divider } from \"@mui/material\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst Spacer = ({ amount }) => {\r\n  return (\r\n    <>\r\n      <Divider sx={{ visibility: \"hidden\", borderBottomWidth: amount }} />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default Spacer;","import React from \"react\";\r\nimport { Button, Divider, FormControlLabel, FormHelperText, MenuItem, Radio, RadioGroup, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nimport BodyWrapper from \"../components/body-wrapper\";\r\nimport Spacer from \"../components/spacer\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string(\"Enter your name.\")\r\n    .required(\"Name is required.\"),\r\n  email: yup\r\n    .string(\"Enter your email.\")\r\n    .email(\"Enter a valid email.\")\r\n    .required(\"Email is required.\"),\r\n  purpose: yup\r\n    .string(\"Enter your purpose.\")\r\n    .required(\"Purpose is required.\"),\r\n  mobileGame: yup\r\n    .string().when(\"purpose\", {\r\n      is: (purpose) => (purpose === \"Mobile Games\"),\r\n      then: () => yup\r\n        .string(\"Select your game.\")\r\n        .required(\"Game selection is required.\"),\r\n      otherwise: () => yup\r\n        .string(),\r\n    }),\r\n  subject: yup\r\n    .string(\"Enter your subject.\")\r\n    .required(\"Subject is required.\"),\r\n  message: yup\r\n    .string(\"Enter your message.\")\r\n    .min(5, \"Message is too short.\")\r\n    .required(\"Message is required.\"),\r\n});\r\n\r\nconst purposeOptions = [\r\n  \"General\",\r\n  \"Mobile Games\",\r\n];\r\n\r\nconst mobileGames = [\r\n  \"Frankrit Eats Meat\",\r\n  \"Shark-A-Boom\",\r\n  \"Dino with a Gun\",\r\n];\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst Contact = () => {\r\n  const theme = useTheme();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      purpose: \"\",\r\n      mobileGame: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  function resetFormikFieldCondition(fieldName, compareOne, isNotCompareTwo) {\r\n    if (compareOne !== isNotCompareTwo) {\r\n      formik.setFieldValue(fieldName, \"\", false)\r\n      formik.setFieldTouched(fieldName, false, false);\r\n      formik.setFieldError(fieldName, false, false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BodyWrapper>\r\n        <Divider />\r\n        <Stack alignItems={\"center\"} justifyContent={\"center\"}>\r\n          <Typography variant=\"body2\">Drop Me A Message</Typography>\r\n          <Typography variant=\"subtitle2\">Note: This form currently don't have a service/backend api so the submit don't work.</Typography>\r\n          <Typography inline align=\"center\" variant=\"subtitle2\">For now, you can email me directly at:<br />j.raj93.designer@gmail.com</Typography>\r\n        </Stack>\r\n        <Divider />\r\n        <Spacer amount={10} />\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"name\"\r\n              name=\"name\"\r\n              label=\"* Name\"\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"* Email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              id=\"purpose\"\r\n              name=\"purpose\"\r\n              label=\"* Purpose\"\r\n              value={formik.values.purpose}\r\n              onChange={(e) => {\r\n                formik.handleChange(e);\r\n                resetFormikFieldCondition(\"mobileGame\", formik.values.purpose, \"Mobile Games\");\r\n              }}\r\n              onBlur={(e) => {\r\n                formik.handleBlur(e);\r\n                resetFormikFieldCondition(\"mobileGame\", formik.values.purpose, \"Mobile Games\");\r\n              }}\r\n              error={formik.touched.purpose && Boolean(formik.errors.purpose)}\r\n              helperText={formik.touched.purpose && formik.errors.purpose}\r\n            >\r\n              {purposeOptions.map((option, index) => (\r\n                <MenuItem key={index} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n\r\n            {formik.values.purpose === \"Mobile Games\" &&\r\n              <RadioGroup sx={{ px: \"20px\" }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={formik.touched[\"mobileGame\"] && formik.errors[\"mobileGame\"] && theme.palette.error.main}\r\n                >\r\n                  * Select the game:\r\n                </Typography>\r\n                {mobileGames.map((option, index) => (\r\n                  <FormControlLabel\r\n                    key={index}\r\n                    id=\"mobileGame\"\r\n                    name=\"mobileGame\"\r\n                    label={<Typography variant=\"body2\">{option}</Typography>}\r\n                    value={option}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    error={formik.touched.mobileGame && Boolean(formik.errors.mobileGame)}\r\n                    helperText={formik.touched.mobileGame && formik.errors.mobileGame}\r\n                    control={<Radio\r\n                      sx={{\r\n                        color: formik.touched[\"mobileGame\"] && formik.errors[\"mobileGame\"] && theme.palette.error.main\r\n                      }}\r\n                    />}\r\n                    sx={{\r\n                      color: formik.touched[\"mobileGame\"] && formik.errors[\"mobileGame\"] && theme.palette.error.main\r\n                    }}\r\n                  />\r\n                ))}\r\n                {formik.touched[\"mobileGame\"] && formik.errors[\"mobileGame\"] && (\r\n                  <FormHelperText sx={{ color: theme.palette.error.main }} id=\"mobileGame\">\r\n                    {formik.errors[\"mobileGame\"]}\r\n                  </FormHelperText>\r\n                )}\r\n              </RadioGroup>\r\n            }\r\n\r\n            <TextField\r\n              fullWidth\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              label=\"* Subject\"\r\n              value={formik.values.subject}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n              helperText={formik.touched.subject && formik.errors.subject}\r\n            />\r\n\r\n            <Stack spacing={0.75}>\r\n              <Typography variant=\"body2\">How can I help?</Typography>\r\n              <FormHelperText id=\"message\">Please do not include confidential or sensitive information in your message.</FormHelperText>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                id=\"message\"\r\n                name=\"message\"\r\n                label=\"* Message\"\r\n                value={formik.values.message}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                error={formik.touched.message && Boolean(formik.errors.message)}\r\n                helperText={formik.touched.message && formik.errors.message}\r\n              />\r\n            </Stack>\r\n\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Stack>\r\n        </form>\r\n      </BodyWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default Contact;"],"names":["_ref","children","useTheme","_jsx","_Fragment","Stack","p","sx","width","maxWidth","flexGrow","height","overflowY","direction","justifyContent","position","spacing","xs","md","lg","amount","Divider","visibility","borderBottomWidth","validationSchema","yup","name","required","email","purpose","mobileGame","when","is","then","otherwise","subject","message","min","purposeOptions","mobileGames","Contact","theme","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","resetFormikFieldCondition","fieldName","compareOne","isNotCompareTwo","setFieldValue","setFieldTouched","setFieldError","_jsxs","BodyWrapper","alignItems","Typography","variant","inline","align","Spacer","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","select","e","map","option","index","MenuItem","RadioGroup","px","color","palette","main","FormControlLabel","control","Radio","FormHelperText","multiline","Button","type"],"sourceRoot":""}