{"version":3,"file":"static/js/738.6e6c915e.chunk.js","mappings":"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","sources":["assets/images/games/dino-with-a-gun/gallery-showcase/index.js","pages/playground/games/dino-with-a-gun.js","../node_modules/phosphor-react/src/icons/DownloadSimple.tsx","../node_modules/phosphor-react/src/icons/ListBullets.tsx","assets/images/games/dino-with-a-gun/gallery-showcase|sync|nonrecursive|/.(png%7Cjpe?g%7Csvg)$"],"sourcesContent":["//import image from \"./20190621_145601_edit+(IG).png\"\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nfunction importAll(r) {\r\n  return r.keys().map(r);\r\n}\r\n\r\nconst importedImages = importAll(require.context('./', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n// Note: The imported order is based on name order of the files.\r\nconst imageList = [\r\n  {\r\n    img: importedImages[0],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[1],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[2],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[3],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[4],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[5],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[6],\r\n    title: \"\",\r\n  },\r\n  {\r\n    img: importedImages[7],\r\n    title: \"\",\r\n  },\r\n];\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport { imageList };","import React, { useRef } from \"react\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Alert, Box, Button, Divider, MenuItem, Stack, Typography } from \"@mui/material\";\r\nimport { CaretDown, DownloadSimple, Question, Table } from \"phosphor-react\";\r\nimport { Gavel } from \"@phosphor-icons/react\";\r\n\r\nimport BodyWrapper from \"../../../components/body-wrapper\";\r\nimport Spacer from \"../../../components/spacer\";\r\nimport Image from \"../../../components/image/image\";\r\nimport ImageGallery from \"../../../components/image-gallery\";\r\nimport FloatingContentMenu from \"../../../components/floating-content-menu\";\r\n\r\nimport AppIcon from \"../../../assets/images/games/dino-with-a-gun/game-app-icon.png\";\r\nimport PlayStoreDLButton from \"../../../assets/images/games/general/playstore-download-button.png\";\r\nimport JayProfilePic from \"../../../assets/images/games/dino-with-a-gun/devs/jay-r.jpg\";\r\nimport { imageList as GameShowcase } from \"../../../assets/images/games/dino-with-a-gun/gallery-showcase\";\r\nimport Artwork from \"../../../assets/images/games/dino-with-a-gun/artwork.png\";\r\n\r\nimport { PATH_WEBPAGE } from \"../../../routes/paths\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nconst DinoWithAGun = () => {\r\n  // FloatingContentMenu\r\n  const fcm = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <BodyWrapper>\r\n        {/* --------------------------------------------------------- */}\r\n        {/* ABOUT --------------------------------------------------- */}\r\n        {/* --------------------------------------------------------- */}\r\n        <div id=\"about\"></div>\r\n        <Image src={Artwork} height={260} />\r\n        <Spacer amount={5} />\r\n        <Stack>\r\n          <Typography inline align=\"center\" variant=\"body2\">\r\n            🦖🔫 Dino shoots everything everywhere all at once with a gun.<br /><br />\r\n            Dino with a Gun is an adventure roguelike & survivor io game.<br />\r\n            Survive the endless waves of monsters, zombies, ghosts, parasites, robots, and more!<br />\r\n            Upgrade your equipment and character to expand your knowledge of tech and wizardry to triumph over your foes!\r\n          </Typography>\r\n        </Stack>\r\n        <Spacer amount={5} />\r\n        <ImageGallery imageSet={GameShowcase} columns={5} aspectRatio={9 / 16} />\r\n        <Spacer amount={30} />\r\n\r\n        {/* --------------------------------------------------------- */}\r\n        {/* FEATURES ------------------------------------------------ */}\r\n        {/* --------------------------------------------------------- */}\r\n        <div id=\"features\"></div>\r\n        <Stack alignItems={\"center\"} justifyContent={\"center\"}>\r\n          <Typography variant=\"h6\">❖ Features ❖</Typography>\r\n        </Stack>\r\n        <Spacer amount={5} />\r\n\r\n        <Stack>\r\n          <Typography variant=\"body2\">\r\n            Play to find out!~😉\r\n          </Typography>\r\n        </Stack>\r\n        <Spacer amount={30} />\r\n\r\n        {/* --------------------------------------------------------- */}\r\n        {/* DEVS ---------------------------------------------------- */}\r\n        {/* --------------------------------------------------------- */}\r\n        <div id=\"developers\"></div>\r\n        <Stack alignItems={\"center\"} justifyContent={\"center\"}>\r\n          <Typography variant=\"h6\">❖ Developers ❖</Typography>\r\n        </Stack>\r\n        <Spacer amount={5} />\r\n\r\n        <Stack spacing={3}>\r\n          <Stack spacing={1}>\r\n            <Image src={JayProfilePic} height={200} />\r\n            <Stack>\r\n              <Typography inline align=\"center\" variant=\"body2\">\r\n                Jay R.\r\n              </Typography>\r\n              <Typography inline align=\"center\" variant=\"caption\">\r\n                Solo Dev\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n        <Spacer amount={30} />\r\n        <Divider />\r\n        <Spacer amount={20} />\r\n\r\n        {/* --------------------------------------------------------- */}\r\n        {/* DOWNLOAD ------------------------------------------------ */}\r\n        {/* --------------------------------------------------------- */}\r\n        <div id=\"download\"></div>\r\n        <Stack direction={\"row\"} alignItems={\"center\"} justifyContent={\"center\"} spacing={0.75}>\r\n          <DownloadSimple size={28} />\r\n          <Typography variant=\"h5\">DOWNLOAD</Typography>\r\n        </Stack>\r\n        <Spacer amount={10} />\r\n\r\n        <Image\r\n          src={AppIcon}\r\n          height={180}\r\n        />\r\n        <Image\r\n          src={PlayStoreDLButton}\r\n          height={56}\r\n          url=\"https://play.google.com/store/apps/details?id=com.jgamesentertainment.dinowithagun\"\r\n        />\r\n      </BodyWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// ---------------------------------------------------------\r\n\r\nexport default DinoWithAGun;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"86 110 128 152 170 110\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <path\n      d=\"M216,152v56a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polyline\n      points=\"86 110 128 152 170 110\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M216,152v56a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M80.3,115.7a8.2,8.2,0,0,1-1.7-8.7,8,8,0,0,1,7.4-5h34V40a8,8,0,0,1,16,0v62h34a8,8,0,0,1,7.4,5,8.2,8.2,0,0,1-1.7,8.7l-42,42a8.2,8.2,0,0,1-11.4,0ZM216,144a8,8,0,0,0-8,8v56H48V152a8,8,0,0,0-16,0v56a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V152A8,8,0,0,0,216,144Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"86 110 128 152 170 110\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <path\n      d=\"M216,152v56a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"86 110 128 152 170 110\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <path\n      d=\"M216,152v56a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"86 110 128 152 170 110\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <path\n      d=\"M216,152v56a8,8,0,0,1-8,8H48a8,8,0,0,1-8-8V152\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst DownloadSimple = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nDownloadSimple.displayName = \"DownloadSimple\";\n\nexport default DownloadSimple;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"88\"\n      y1=\"64\"\n      x2=\"216\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"192\"\n      x2=\"216\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <circle cx=\"44\" cy=\"128\" r=\"16\" />\n    <circle cx=\"44\" cy=\"64\" r=\"16\" />\n    <circle cx=\"44\" cy=\"192\" r=\"16\" />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"88\"\n      y1=\"64\"\n      x2=\"216\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"192\"\n      x2=\"216\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"44\" cy=\"64\" r=\"12\" />\n    <circle cx=\"44\" cy=\"128\" r=\"12\" />\n    <circle cx=\"44\" cy=\"192\" r=\"12\" />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M80,64a8,8,0,0,1,8-8H216a8,8,0,0,1,0,16H88A8,8,0,0,1,80,64Zm136,56H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Zm0,64H88a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM44,116a12,12,0,1,0,12,12A12,12,0,0,0,44,116Zm0-64A12,12,0,1,0,56,64,12,12,0,0,0,44,52Zm0,128a12,12,0,1,0,12,12A12,12,0,0,0,44,180Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"88\"\n      y1=\"64\"\n      x2=\"216\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"192\"\n      x2=\"216\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <circle cx=\"44\" cy=\"64\" r=\"10\" />\n    <circle cx=\"44\" cy=\"192\" r=\"10\" />\n    <circle cx=\"44\" cy=\"128\" r=\"10\" />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"88\"\n      y1=\"64\"\n      x2=\"216\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"192\"\n      x2=\"216\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <circle cx=\"44\" cy=\"128\" r=\"8\" />\n    <circle cx=\"44\" cy=\"64\" r=\"8\" />\n    <circle cx=\"44\" cy=\"192\" r=\"8\" />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"88\"\n      y1=\"64\"\n      x2=\"216\"\n      y2=\"64\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"88\"\n      y1=\"192\"\n      x2=\"216\"\n      y2=\"192\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <circle cx=\"44\" cy=\"64\" r=\"12\" />\n    <circle cx=\"44\" cy=\"128\" r=\"12\" />\n    <circle cx=\"44\" cy=\"192\" r=\"12\" />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst ListBullets = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nListBullets.displayName = \"ListBullets\";\n\nexport default ListBullets;\n","var map = {\n\t\"./pic-1.jpg\": 9650,\n\t\"./pic-2.jpg\": 1746,\n\t\"./pic-3.jpg\": 2699,\n\t\"./pic-4.jpg\": 1371,\n\t\"./pic-5.jpg\": 2053,\n\t\"./pic-6.jpg\": 9056,\n\t\"./pic-7.jpg\": 5168,\n\t\"./pic-8.jpg\": 471\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6582;"],"names":["importedImages","r","require","keys","map","imageList","img","title","DinoWithAGun","useRef","useNavigate","_jsx","_Fragment","children","_jsxs","BodyWrapper","id","Image","src","Artwork","height","Spacer","amount","Stack","Typography","inline","align","variant","ImageGallery","imageSet","GameShowcase","columns","aspectRatio","alignItems","justifyContent","spacing","JayProfilePic","Divider","direction","DownloadSimple","size","AppIcon","PlayStoreDLButton","url","pathsByWeight","Map","set","color","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","d","renderPath","weight","renderPathForWeight","forwardRef","props","ref","IconBase","Object","assign","displayName","cx","cy","ListBullets","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports"],"sourceRoot":""}